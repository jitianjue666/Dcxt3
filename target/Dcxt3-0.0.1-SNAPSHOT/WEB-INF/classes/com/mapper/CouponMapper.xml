<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.CouponMapper">
  <resultMap id="BaseResultMap" type="com.vo.Coupon">
    <id column="couponid" jdbcType="INTEGER" property="couponid" />
    <result column="spid" jdbcType="INTEGER" property="spid" />
    <result column="frommoney" jdbcType="DOUBLE" property="frommoney" />
    <result column="minusmoney" jdbcType="DOUBLE" property="minusmoney" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    couponid, spid, frommoney, minusmoney
  </sql>
  <select id="selectByExample" parameterType="com.vo.CouponExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from coupon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from coupon
    where couponid = #{couponid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from coupon
    where couponid = #{couponid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.vo.CouponExample">
    delete from coupon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.vo.Coupon">
    insert into coupon (couponid, spid, frommoney, 
      minusmoney)
    values (#{couponid,jdbcType=INTEGER}, #{spid,jdbcType=INTEGER}, #{frommoney,jdbcType=DOUBLE}, 
      #{minusmoney,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.vo.Coupon">
    insert into coupon
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="couponid != null">
        couponid,
      </if>
      <if test="spid != null">
        spid,
      </if>
      <if test="frommoney != null">
        frommoney,
      </if>
      <if test="minusmoney != null">
        minusmoney,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="couponid != null">
        #{couponid,jdbcType=INTEGER},
      </if>
      <if test="spid != null">
        #{spid,jdbcType=INTEGER},
      </if>
      <if test="frommoney != null">
        #{frommoney,jdbcType=DOUBLE},
      </if>
      <if test="minusmoney != null">
        #{minusmoney,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.vo.CouponExample" resultType="java.lang.Long">
    select count(*) from coupon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update coupon
    <set>
      <if test="record.couponid != null">
        couponid = #{record.couponid,jdbcType=INTEGER},
      </if>
      <if test="record.spid != null">
        spid = #{record.spid,jdbcType=INTEGER},
      </if>
      <if test="record.frommoney != null">
        frommoney = #{record.frommoney,jdbcType=DOUBLE},
      </if>
      <if test="record.minusmoney != null">
        minusmoney = #{record.minusmoney,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update coupon
    set couponid = #{record.couponid,jdbcType=INTEGER},
      spid = #{record.spid,jdbcType=INTEGER},
      frommoney = #{record.frommoney,jdbcType=DOUBLE},
      minusmoney = #{record.minusmoney,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.vo.Coupon">
    update coupon
    <set>
      <if test="spid != null">
        spid = #{spid,jdbcType=INTEGER},
      </if>
      <if test="frommoney != null">
        frommoney = #{frommoney,jdbcType=DOUBLE},
      </if>
      <if test="minusmoney != null">
        minusmoney = #{minusmoney,jdbcType=DOUBLE},
      </if>
    </set>
    where couponid = #{couponid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vo.Coupon">
    update coupon
    set spid = #{spid,jdbcType=INTEGER},
      frommoney = #{frommoney,jdbcType=DOUBLE},
      minusmoney = #{minusmoney,jdbcType=DOUBLE}
    where couponid = #{couponid,jdbcType=INTEGER}
  </update>
    <insert id="tianjiahongbao" parameterType="com.vo.Coupon">
    insert into coupon (spid, frommoney, 
      minusmoney)
    values (#{spid,jdbcType=INTEGER}, #{frommoney,jdbcType=DOUBLE}, 
      #{minusmoney,jdbcType=DOUBLE})
  </insert>
    <select id="getbendiancoupon"  resultMap="BaseResultMap">
    select * from coupon where spid = #{spid,jdbcType=INTEGER} order by frommoney desc

  </select>
      <select id="getgaicoupon"  resultMap="BaseResultMap">
    select * from coupon where couponid = #{couponid,jdbcType=INTEGER} 

  </select>
</mapper>